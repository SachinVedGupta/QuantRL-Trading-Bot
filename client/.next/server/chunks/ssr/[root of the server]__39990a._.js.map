{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/sachi/OneDrive/Desktop/Coding%20Projects/QuantRL-Trading-Bot/client/src/pages/_document.tsx"],"sourcesContent":["import { Html, Head, Main, NextScript } from \"next/document\";\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body className=\"antialiased\">\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,qKAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACT,qKAAC,yHAAA,CAAA,OAAI;;;;;0BACL,qKAAC;gBAAK,WAAU;;kCACd,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/sachi/OneDrive/Desktop/Coding%20Projects/QuantRL-Trading-Bot/client/src/pages/_app.tsx"],"sourcesContent":["import \"@/styles/globals.css\";\nimport type { AppProps } from \"next/app\";\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return <Component {...pageProps} />;\n}\n"],"names":[],"mappings":";;;;;;AAGe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAY;IAC5D,qBAAO,qKAAC;QAAW,GAAG,SAAS;;;;;;AACjC"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/sachi/OneDrive/Desktop/Coding%20Projects/QuantRL-Trading-Bot/client/src/pages/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction Index() {\n  // State for the data of each step\n  const [stepsData, setStepsData] = useState<any[]>([]);\n\n  useEffect(() => {\n    // Fetch the data from the Python server\n    fetch(\"http://localhost:8000/api/trades\")\n      .then((response) => response.json())\n      .then((data) => {\n        // Process the nested data structure\n        const steps = [];\n        for (const outerKey in data) {\n          const innerData = data[outerKey];\n          for (const innerKey in innerData) {\n            const stepDetails = {\n              key: outerKey,\n              subKey: innerKey,\n              ...innerData[innerKey],\n            };\n            steps.push(stepDetails);\n          }\n        }\n        setStepsData(steps);\n      });\n  }, []); // Empty array means only run once - at render\n\n  // Define the stock prefixes\n  const stockLabels = [\"Apple\", \"Motorola\", \"Starbucks\"];\n\n  return (\n    <div className=\"max-w-screen-xl mx-auto p-6 bg-white rounded-lg shadow-lg\">\n      <h1 className=\"text-3xl text-center text-gray-800 mb-8\">Trading Bot Automation</h1>\n      <h2 className=\"text-xl text-blue-600 mb-4 text-center\">Below you will find the trades made by an automated trading bot. Each episode has approximatley 600 steps.</h2>\n      <h2 className=\"text-xl text-blue-600 mb-4 text-center\">Scroll to the bottom to see how much money the bot made. The initial investment is $20,000. </h2>\n      {stepsData.map((stepData, index) => (\n        <div className=\"bg-white mb-6 p-6 rounded-lg shadow-md\" key={index}>\n          {/* Display Keys */}\n          <h2 className=\"text-xl text-blue-600 mb-4\">\n            Episode: {stepData.key}, Step: {stepData.subKey}\n          </h2>\n\n          {/* Step Information */}\n          <h3 className=\"text-lg text-gray-800 mb-2\">Step {stepData.step}</h3>\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-6\">\n            {/* Action */}\n            <div className=\"section\">\n              <h3 className=\"text-lg text-gray-800 mb-2\">Action:</h3>\n              <ul className=\"list-none pl-0\">\n                {stepData.action.map((item, idx) => (\n                  <li key={idx} className=\"text-gray-600 text-sm mb-1\">\n                    {stockLabels[idx]}: {item === 0 ? \"Sell\" : item === 1 ? \"Hold\" : \"Buy\"}\n                  </li>\n                ))}\n              </ul>\n            </div>\n\n            {/* Cash in Hand */}\n            <div className=\"section\">\n              <h3 className=\"text-lg text-gray-800 mb-2\">Cash in Hand:</h3>\n              <p className=\"text-gray-800 text-sm\">${stepData.cash_in_hand.toFixed(2)}</p>\n            </div>\n\n            {/* Portfolio Value */}\n            <div className=\"section\">\n              <h3 className=\"text-lg text-gray-800 mb-2\">Portfolio Value:</h3>\n              <p className=\"text-gray-800 text-sm\">${stepData.portfolio_value.toFixed(2)}</p>\n            </div>\n\n            {/* Stock Prices */}\n            <div className=\"section\">\n              <h3 className=\"text-lg text-gray-800 mb-2\">Stock Prices:</h3>\n              <ul className=\"list-none pl-0\">\n                {stepData.stock_prices.map((item, idx) => (\n                  <li key={idx} className=\"text-gray-600 text-sm mb-1\">\n                    {stockLabels[idx]}: ${item.toFixed(2)}\n                  </li>\n                ))}\n              </ul>\n            </div>\n\n            {/* Stocks Owned */}\n            <div className=\"section\">\n              <h3 className=\"text-lg text-gray-800 mb-2\">Stocks Owned:</h3>\n              <ul className=\"list-none pl-0\">\n                {stepData.stocks_owned.map((item, idx) => (\n                  <li key={idx} className=\"text-gray-600 text-sm mb-1\">\n                    {stockLabels[idx]}: {item}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Index;"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS;IACP,kCAAkC;IAClC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IAEpD,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,wCAAwC;QACxC,MAAM,oCACH,IAAI,CAAC,CAAC,WAAa,SAAS,IAAI,IAChC,IAAI,CAAC,CAAC;YACL,oCAAoC;YACpC,MAAM,QAAQ,EAAE;YAChB,IAAK,MAAM,YAAY,KAAM;gBAC3B,MAAM,YAAY,IAAI,CAAC,SAAS;gBAChC,IAAK,MAAM,YAAY,UAAW;oBAChC,MAAM,cAAc;wBAClB,KAAK;wBACL,QAAQ;wBACR,GAAG,SAAS,CAAC,SAAS;oBACxB;oBACA,MAAM,IAAI,CAAC;gBACb;YACF;YACA,aAAa;QACf;IACJ,GAAG,EAAE,GAAG,8CAA8C;IAEtD,4BAA4B;IAC5B,MAAM,cAAc;QAAC;QAAS;QAAY;KAAY;IAEtD,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC;gBAAG,WAAU;0BAA0C;;;;;;0BACxD,qKAAC;gBAAG,WAAU;0BAAyC;;;;;;0BACvD,qKAAC;gBAAG,WAAU;0BAAyC;;;;;;YACtD,UAAU,GAAG,CAAC,CAAC,UAAU,sBACxB,qKAAC;oBAAI,WAAU;;sCAEb,qKAAC;4BAAG,WAAU;;gCAA6B;gCAC/B,SAAS,GAAG;gCAAC;gCAAS,SAAS,MAAM;;;;;;;sCAIjD,qKAAC;4BAAG,WAAU;;gCAA6B;gCAAM,SAAS,IAAI;;;;;;;sCAC9D,qKAAC;4BAAI,WAAU;;8CAEb,qKAAC;oCAAI,WAAU;;sDACb,qKAAC;4CAAG,WAAU;sDAA6B;;;;;;sDAC3C,qKAAC;4CAAG,WAAU;sDACX,SAAS,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,oBAC1B,qKAAC;oDAAa,WAAU;;wDACrB,WAAW,CAAC,IAAI;wDAAC;wDAAG,SAAS,IAAI,SAAS,SAAS,IAAI,SAAS;;mDAD1D;;;;;;;;;;;;;;;;8CAQf,qKAAC;oCAAI,WAAU;;sDACb,qKAAC;4CAAG,WAAU;sDAA6B;;;;;;sDAC3C,qKAAC;4CAAE,WAAU;;gDAAwB;gDAAE,SAAS,YAAY,CAAC,OAAO,CAAC;;;;;;;;;;;;;8CAIvE,qKAAC;oCAAI,WAAU;;sDACb,qKAAC;4CAAG,WAAU;sDAA6B;;;;;;sDAC3C,qKAAC;4CAAE,WAAU;;gDAAwB;gDAAE,SAAS,eAAe,CAAC,OAAO,CAAC;;;;;;;;;;;;;8CAI1E,qKAAC;oCAAI,WAAU;;sDACb,qKAAC;4CAAG,WAAU;sDAA6B;;;;;;sDAC3C,qKAAC;4CAAG,WAAU;sDACX,SAAS,YAAY,CAAC,GAAG,CAAC,CAAC,MAAM,oBAChC,qKAAC;oDAAa,WAAU;;wDACrB,WAAW,CAAC,IAAI;wDAAC;wDAAI,KAAK,OAAO,CAAC;;mDAD5B;;;;;;;;;;;;;;;;8CAQf,qKAAC;oCAAI,WAAU;;sDACb,qKAAC;4CAAG,WAAU;sDAA6B;;;;;;sDAC3C,qKAAC;4CAAG,WAAU;sDACX,SAAS,YAAY,CAAC,GAAG,CAAC,CAAC,MAAM,oBAChC,qKAAC;oDAAa,WAAU;;wDACrB,WAAW,CAAC,IAAI;wDAAC;wDAAG;;mDADd;;;;;;;;;;;;;;;;;;;;;;;mBAlD0C;;;;;;;;;;;AA6DrE;uCAEe"}},
    {"offset": {"line": 400, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}